{
  "stats": {
    "suites": 4,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-11T02:53:04.371Z",
    "end": "2018-05-11T02:53:18.683Z",
    "duration": 14312,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "9e771b99-46ce-4c60-be26-186ebf9fb6e9",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "29fb62d3-40fd-4208-840c-53dd18978aeb",
        "title": "wom application tests",
        "fullFile": "E:\\github\\kedacomresearch\\womservice_bk\\test\\app.test.js",
        "file": "\\test\\app.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "wom application tests \"before all\" hook",
            "timedOut": false,
            "duration": 3,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.server = app.listen(port);\nthis.server.once('listening', () => done());",
            "err": {},
            "isRoot": false,
            "uuid": "2084b975-b501-456e-9572-b263c2224d27",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "wom application tests \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.server.close(done);",
            "err": {},
            "isRoot": false,
            "uuid": "517d60ce-573a-484c-bf85-8f93ed898d59",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "starts and shows the index page",
            "fullTitle": "wom application tests starts and shows the index page",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "return rp(getUrl()).then(body =>\n  assert.ok(body.indexOf('<html>') !== -1)\n);",
            "err": {},
            "isRoot": false,
            "uuid": "32b81301-8de8-4560-b2f4-5678b93aab18",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "e041cc8e-72ac-454b-95f5-4d75075b3c5d",
            "title": "404",
            "fullFile": "E:\\github\\kedacomresearch\\womservice_bk\\test\\app.test.js",
            "file": "\\test\\app.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "shows a 404 HTML page",
                "fullTitle": "wom application tests 404 shows a 404 HTML page",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp({\n  url: getUrl('path/to/nowhere'),\n  headers: {\n    'Accept': 'text/html'\n  }\n}).catch(res => {\n  assert.equal(res.statusCode, 404);\n  assert.ok(res.error.indexOf('<html>') !== -1);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e12ddb4e-8d71-4dca-b8b2-984c695b0343",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "shows a 404 JSON error without stack trace",
                "fullTitle": "wom application tests 404 shows a 404 JSON error without stack trace",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp({\n  url: getUrl('path/to/nowhere'),\n  json: true\n}).catch(res => {\n  assert.equal(res.statusCode, 404);\n  assert.equal(res.error.code, 404);\n  assert.equal(res.error.message, 'Page not found');\n  assert.equal(res.error.name, 'NotFound');\n});",
                "err": {},
                "isRoot": false,
                "uuid": "dd9708d3-bd57-4f56-a2f5-196171c35f05",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e12ddb4e-8d71-4dca-b8b2-984c695b0343",
              "dd9708d3-bd57-4f56-a2f5-196171c35f05"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [
          "32b81301-8de8-4560-b2f4-5678b93aab18"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 25,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "60da6f88-dc0d-4264-86f8-d41487fce910",
        "title": "'livestream' service",
        "fullFile": "E:\\github\\kedacomresearch\\womservice_bk\\test\\services\\livestream.test.js",
        "file": "\\test\\services\\livestream.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "'livestream' service \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.server = app.listen(port);\nthis.server.once('listening', () => done());",
            "err": {},
            "isRoot": false,
            "uuid": "68960ddf-dc0e-46eb-af9c-4a04631a5590",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "'livestream' service \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "webstreamer.Terminate();\nthis.server.close(done);",
            "err": {},
            "isRoot": false,
            "uuid": "03fa6381-7980-459f-9cc1-746f2e0f9f13",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "75c6faad-bcd5-4db4-b8d6-a308760ea883",
            "title": "livestream service analyze",
            "fullFile": "E:\\github\\kedacomresearch\\womservice_bk\\test\\services\\livestream.test.js",
            "file": "\\test\\services\\livestream.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "'livestream' service livestream service analyze \"before all\" hook",
                "timedOut": false,
                "duration": 10,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "// initialize rtsp test server app\nrtsp_test_server_app = new webstreamer.RTSPTestServer('rtsp_test_server1');\nawait rtsp_test_server_app.initialize();\nawait rtsp_test_server_app.startup();\n// initialize analyzer app\nanalyzer_app = new webstreamer.RTSPAnalyzer('rtsp_test_analyzer', 'rtsp://127.0.0.1/test_server');\nawait analyzer_app.initialize();\nanalyzer_app.on('spectrum', function (data) {\n  let obj = JSON.parse(data.toString('utf8'));\n  let magnitude = obj.magnitude;\n  analyzer_app.calc_band_number(magnitude);\n});\nanalyzer_app.on('multifilesink', async function (data) {\n  analyzer_app.store_image(data);\n});\n//init webrtc analyzer\nwebrtc_analyzer_app = new webstreamer.WebRTCAnalyzer('webrtc_test_analyzer', audience_ep_webrtc.signal_bridge, audience_ep_webrtc.connection_id);\nawait webrtc_analyzer_app.initialize();\nwebrtc_analyzer_app.on('spectrum', function (data) {\n  let obj = JSON.parse(data.toString('utf8'));\n  let magnitude = obj.magnitude;\n  webrtc_analyzer_app.calc_band_number(magnitude);\n});\nwebrtc_analyzer_app.on('multifilesink', async function (data) {\n  webrtc_analyzer_app.store_image(data);\n});\nawait webrtc_analyzer_app.startup();",
                "err": {},
                "isRoot": false,
                "uuid": "ecce26c1-7874-4156-a8ea-68e8c57960af",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [
              {
                "title": "\"after all\" hook",
                "fullTitle": "'livestream' service livestream service analyze \"after all\" hook",
                "timedOut": false,
                "duration": 160,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "await analyzer_app.terminate();\nawait analyzer_app.clean();\nawait rtsp_test_server_app.stop();\nawait rtsp_test_server_app.terminate();",
                "err": {},
                "isRoot": false,
                "uuid": "1feb4a3a-7c71-41cc-9a5e-ab752ef30ce4",
                "isHook": true,
                "skipped": false
              }
            ],
            "tests": [
              {
                "title": "create livestream and return id of the livestream",
                "fullTitle": "'livestream' service livestream service analyze create livestream and return id of the livestream",
                "timedOut": false,
                "duration": 56,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp({\n  method: 'POST',\n  url: getUrl('wom/livestream'),\n  body : {\n    source: {\n      name: 'endpoint1',\n      protocol: 'rtspclient', // rtspclient/rtspserver\n      url: 'rtsp://127.0.0.1/test'\n    }\n  },\n  json: true\n}).then((res) => {\n  livestreamId = res.id;\n  if(!livestreamId) {\n    assert.fail();\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9141100f-20f3-4882-b01a-353ae734fc1a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "add livestream rtspserver audience",
                "fullTitle": "'livestream' service livestream service analyze add livestream rtspserver audience",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp({\n  method: 'POST',\n  url: getUrl('wom/livestream.audience'),\n  body : {\n    id: livestreamId,\n    audience: audience_ep\n  },\n  json: true\n}).then((res) => {\n  audienceId = res.id;\n  if(!audienceId) {\n    assert.fail();\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d52c5793-c2d6-49ad-bb99-ba9e99f6fe76",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "rtsp analyze",
                "fullTitle": "'livestream' service livestream service analyze rtsp analyze",
                "timedOut": false,
                "duration": 5889,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "this.timeout(0);\nawait sleep(1000);\ntry {\n  await analyzer_app.startup();\n} catch (err) {\n  throw err;\n}\n\ntry {\n  await webstreamer.utils.poll(() => {\n    if((analyzer_app.audio_passed >= 3) &&\n      (analyzer_app.images.length >= 10))\n      return true;\n    else\n      return false;\n  }, 100, 10000);\n} catch (err) {\n  throw err;\n}\nlet image_res;\ntry {\n  image_res = await analyzer_app.analyze_image();\n} catch (err) {\n  throw err;\n}\ntry {\n  await analyzer_app.stop();\n} catch (error) {\n  throw new Error('video analyze failed: ' + error);\n}\nimage_res.forEach((value) => {\n  assert.closeTo(value.time, value.ms, 10, 'ocr recognize time');\n});",
                "err": {},
                "isRoot": false,
                "uuid": "400d75f1-f2d8-4160-9c4b-687253396e4f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "remove livestream rtspserver audience",
                "fullTitle": "'livestream' service livestream service analyze remove livestream rtspserver audience",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp.del({\n  url: getUrl('wom/livestream.audience'),\n  qs : {\n    audienceId: audienceId,\n    livestreamId: livestreamId\n  }\n}).then((res) => {\n  assert.equal('{\"OK\":\"success\"}', res);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f1c61b31-61be-47a6-9d2a-5c0436e85b50",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "add livestream webrtc audience",
                "fullTitle": "'livestream' service livestream service analyze add livestream webrtc audience",
                "timedOut": false,
                "duration": 129,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp({\n  method: 'POST',\n  url: getUrl('wom/livestream.audience'),\n  body : {\n    id: livestreamId,\n    audience: audience_ep_webrtc\n  },\n  json: true\n}).then((res) => {\n  audienceId = res.id;\n  if(!audienceId) {\n    assert.fail();\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a63a6868-6e2f-4d42-b4de-b4b0a4db5eff",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "webrtc analyze",
                "fullTitle": "'livestream' service livestream service analyze webrtc analyze",
                "timedOut": false,
                "duration": 7956,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "this.timeout(0);\nawait sleep(1000);\ntry {\n  await webstreamer.utils.poll(() => {\n    if((webrtc_analyzer_app.audio_passed >= 3) &&\n      (webrtc_analyzer_app.images.length >= 10))\n      return true;\n    else\n      return false;\n  }, 100, 10000);\n} catch (err) {\n  throw err;\n}\nlet image_res;\ntry {\n  image_res = await webrtc_analyzer_app.analyze_image();\n} catch (err) {\n  throw err;\n}\ntry {\n  await webrtc_analyzer_app.stop();\n} catch (error) {\n  throw new Error('video analyze failed: ' + error);\n}\nimage_res.forEach((value) => {\n  assert.closeTo(value.time, value.ms, 10, 'ocr recognize time');\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f2818af5-8277-4e20-afb6-e4ad44c114e8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "remove livestream webrtc audience",
                "fullTitle": "'livestream' service livestream service analyze remove livestream webrtc audience",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp.del({\n  url: getUrl('wom/livestream.audience'),\n  qs : {\n    audienceId: audienceId,\n    livestreamId: livestreamId\n  }\n}).then((res) => {\n  assert.equal('{\"OK\":\"success\"}', res);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e0279008-42f6-402a-b296-6c08c9f2aaad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "delete livestream",
                "fullTitle": "'livestream' service livestream service analyze delete livestream",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return rp.del({\n  url: getUrl('wom/livestream'),\n  qs : {\n    id: livestreamId\n  }\n}).then((res) => {\n  assert.equal('{\"OK\":\"success\"}', res);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f85dc71f-aadd-4921-b0c9-9110e0acf5d2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9141100f-20f3-4882-b01a-353ae734fc1a",
              "d52c5793-c2d6-49ad-bb99-ba9e99f6fe76",
              "400d75f1-f2d8-4160-9c4b-687253396e4f",
              "f1c61b31-61be-47a6-9d2a-5c0436e85b50",
              "a63a6868-6e2f-4d42-b4de-b4b0a4db5eff",
              "f2818af5-8277-4e20-afb6-e4ad44c114e8",
              "e0279008-42f6-402a-b296-6c08c9f2aaad",
              "f85dc71f-aadd-4921-b0c9-9110e0acf5d2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14052,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}